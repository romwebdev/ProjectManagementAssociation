@*@model IEnumerable<Association.Models.Student>*@
@model PagedList.IPagedList<Association.Models.Student>
@using PagedList.Mvc;

@*<script>
    $(function(){
        init();
    });
</script>*@
<div id="listPerson" class="table-responsive">
    @if(Model.Count() == 0) 
    { 
        @:<p>aucune donnée</p> 
    } 
    else 
    {
    <table class="table table-striped vert-align">
        <tr>
            <th>
                Photo
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().student_email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().student_type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().student_birthday)
            </th>
            <th>
                Numéro(s) de téléphone
            </th>
            <th>Parents</th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                    if (item.small_image != null && item.small_image != "")
                        {
                           
                            <img src="@Url.Content(item.small_image)" />
                        }
                        else
                        {
                            var identity = item.student_sexe == true ? "~/Content/identity/homme.png" : "~/Content/identity/femme.png";
                       
                      
                            <img src="@Url.Content(identity)" />
                           
                        }
}
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.student_email)
                </td>
                <td>
                   @(item.student_type == true ? "Enfant" : "Adulte")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.student_birthday)
                </td>
               
                <td>
                   @if(item.student_phone != "" && item.student_phone != null)
                   {
                       @Html.DisplayNameFor(model => model.First().student_phone) 
                       @: :<b>     
                       @Html.DisplayFor(modelItem => item.student_phone)
                       @:</b>
                       @:<br />
                   }
                   @if (item.student_mobile != "" && item.student_mobile != null)
                   {
                        
                        @Html.DisplayNameFor(model => model.First().student_mobile) 
                        @: :<b>         
                        @Html.DisplayFor(modelItem => item.student_mobile)
                        @:</b>
                        @:<br />
                   }
                   @if (item.student_otherPhone != "" && item.student_otherPhone != null)
                   { 
                       @Html.DisplayNameFor(model => model.First().student_otherPhone)  
                       @: :<b>
                       @Html.DisplayFor(modelItem => item.student_otherPhone)
                       @:</b>
                       @:<br />
                   }
                </td>

                <td>
                    @foreach (var p in item.parents)
                    {                   
                        @Html.ActionLink(p.FullName, "Details", "Parents", new { id = p.parent_id }, new { @class = "detailsLink____", data_modal = "" })
                        <br />
                    }
                </td>
                <td>
                    @{ var genre = item.student_sexe == true ? "male" : "female"; }
                    @Html.ActionLink("Edit", "Edit", new { id = item.student_id }, htmlAttributes: new { @class = "modal-popup action-edit-" + genre, @onfocus = "$(this).blur()", data_backdrop="static", data_modal = "" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.student_id }, htmlAttributes: new { @class = " modal-popup action-delete-" + genre, @onfocus = "$(this).blur()", data_modal = "" })|
                    @Html.ActionLink("Details", "Details", new { id = item.student_id }, htmlAttributes: new { @class = " modal-popup action-details-" + genre, @onfocus = "$(this).blur()", data_modal = "" }) 

                </td>
            </tr>
        }

    </table>
   }
    <div id="details"></div>
    <div id="contentPager">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
    </div>
</div>


